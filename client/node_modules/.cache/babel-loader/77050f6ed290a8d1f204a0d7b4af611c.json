{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hendr\\\\Documents\\\\ReactProject\\\\mern-project-01\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = () => {\n  _s();\n\n  const profile = useSelector(state => state.profile.profile);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getGithubRepos(profile.githubusername));\n  }, [dispatch, profile]);\n  const repos = useSelector(state => state.profile.repos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, repo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileGithub, \"vrTvieh72W7cPFnhauYRUIAhNcI=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = ProfileGithub;\nexport default ProfileGithub;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["C:/Users/hendr/Documents/ReactProject/mern-project-01/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","useDispatch","useSelector","getGithubRepos","Spinner","ProfileGithub","profile","state","dispatch","githubusername","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcA,OAA1B,CAA3B;AAEA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACL,cAAc,CAACG,OAAO,CAACG,cAAT,CAAf,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,EAAWF,OAAX,CAFM,CAAT;AAIA,QAAMI,KAAK,GAAGR,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcI,KAA1B,CAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,KAAK,KAAK,IAAV,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,GAGCA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACR;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,IAAI,EAAEA,IAAI,CAACC,QADb;AAEE,YAAA,MAAM,EAAC,QAFT;AAGE,YAAA,GAAG,EAAC,qBAHN;AAAA,sBAKGD,IAAI,CAACE;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,kCACUH,IAAI,CAACI,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,qCACaJ,IAAI,CAACK,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,kCAA0CL,IAAI,CAACM,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,OAAUP,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,YADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA/CD;;GAAMd,a;UACYH,W,EAECD,W,EAMHC,W;;;KATVG,a;AAiDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst ProfileGithub = () => {\r\n  const profile = useSelector((state) => state.profile.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getGithubRepos(profile.githubusername));\r\n  }, [dispatch, profile]);\r\n\r\n  const repos = useSelector((state) => state.profile.repos);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div key={repo._id}>\r\n              <ul>\r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileGithub;\r\n"]},"metadata":{},"sourceType":"module"}