{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\"; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(\"/api/profile\", formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (error) {\n    if (error.response != null) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.message, \"danger\"));\n        });\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    if (error.response != null) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.message, \"danger\"));\n        });\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    history.push(\"/dashboard\");\n  } catch (error) {\n    if (error.response != null) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.message, \"danger\"));\n        });\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (error) {\n    if (error.response != null) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.message, \"danger\"));\n        });\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (error) {\n    if (error.response != null) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => {\n          dispatch(setAlert(error.message, \"danger\"));\n        });\n      }\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Account and Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      const res = await axios.delete(`/api/profile/`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\n    } catch (error) {\n      if (error.response != null) {\n        const errors = error.response.data.errors;\n\n        if (errors) {\n          errors.forEach(error => {\n            dispatch(setAlert(error.message, \"danger\"));\n          });\n        }\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/hendr/Documents/ReactProject/mern-project-01/client/src/actions/profile.js"],"names":["axios","setAlert","ACCOUNT_DELETED","CLEAR_PROFILE","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","error","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","message","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { ACCOUNT_DELETED, CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from \"./types\";\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile =\r\n  (formData, history, edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(\r\n        setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\")\r\n      );\r\n\r\n      if (!edit) {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response != null) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if (errors) {\r\n          errors.forEach((error) => {\r\n            dispatch(setAlert(error.message, \"danger\"));\r\n          });\r\n        }\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {\r\n          msg: error.response.statusText,\r\n          status: error.response.status,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    if (error.response != null) {\r\n      const errors = error.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch(setAlert(error.message, \"danger\"));\r\n        });\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    if (error.response != null) {\r\n      const errors = error.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch(setAlert(error.message, \"danger\"));\r\n        });\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (error) {\r\n    if (error.response != null) {\r\n      const errors = error.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch(setAlert(error.message, \"danger\"));\r\n        });\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (error) {\r\n    if (error.response != null) {\r\n      const errors = error.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => {\r\n          dispatch(setAlert(error.message, \"danger\"));\r\n        });\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Account and Profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      const res = await axios.delete(`/api/profile/`);\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n\r\n      dispatch({\r\n        type: ACCOUNT_DELETED,\r\n      });\r\n\r\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\r\n    } catch (error) {\r\n      if (error.response != null) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if (errors) {\r\n          errors.forEach((error) => {\r\n            dispatch(setAlert(error.message, \"danger\"));\r\n          });\r\n        }\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {\r\n          msg: error.response.statusText,\r\n          status: error.response.status,\r\n        },\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}